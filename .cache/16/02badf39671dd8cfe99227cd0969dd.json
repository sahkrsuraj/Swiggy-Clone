{"id":"node_modules/tiny-case/index.js","dependencies":[{"name":"C:\\Users\\Admin\\Desktop\\Swiggy-clone\\package.json","includedInParent":true,"mtime":1715613610972},{"name":"C:\\Users\\Admin\\Desktop\\Swiggy-clone\\node_modules\\tiny-case\\package.json","includedInParent":true,"mtime":1715613422007}],"generated":{"js":"const reWords = /[A-Z\\xc0-\\xd6\\xd8-\\xde]?[a-z\\xdf-\\xf6\\xf8-\\xff]+(?:['’](?:d|ll|m|re|s|t|ve))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde]|$)|(?:[A-Z\\xc0-\\xd6\\xd8-\\xde]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:D|LL|M|RE|S|T|VE))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde](?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])|$)|[A-Z\\xc0-\\xd6\\xd8-\\xde]?(?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:d|ll|m|re|s|t|ve))?|[A-Z\\xc0-\\xd6\\xd8-\\xde]+(?:['’](?:D|LL|M|RE|S|T|VE))?|\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])|\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])|\\d+|(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?)*/g\n\nconst words = (str) => str.match(reWords) || []\n\nconst upperFirst = (str) => str[0].toUpperCase() + str.slice(1)\n\nconst join = (str, d) => words(str).join(d).toLowerCase()\n\nconst camelCase = (str) =>\n  words(str).reduce(\n    (acc, next) =>\n      `${acc}${\n        !acc\n          ? next.toLowerCase()\n          : next[0].toUpperCase() + next.slice(1).toLowerCase()\n      }`,\n    '',\n  )\n\nconst pascalCase = (str) => upperFirst(camelCase(str))\n\nconst snakeCase = (str) => join(str, '_')\n\nconst kebabCase = (str) => join(str, '-')\n\nconst sentenceCase = (str) => upperFirst(join(str, ' '))\n\nconst titleCase = (str) => words(str).map(upperFirst).join(' ')\n\nmodule.exports = {\n  words,\n  upperFirst,\n  camelCase,\n  pascalCase,\n  snakeCase,\n  kebabCase,\n  sentenceCase,\n  titleCase,\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/tiny-case/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/tiny-case/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}}],"sources":{"node_modules/tiny-case/index.js":"const reWords = /[A-Z\\xc0-\\xd6\\xd8-\\xde]?[a-z\\xdf-\\xf6\\xf8-\\xff]+(?:['’](?:d|ll|m|re|s|t|ve))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde]|$)|(?:[A-Z\\xc0-\\xd6\\xd8-\\xde]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:D|LL|M|RE|S|T|VE))?(?=[\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000]|[A-Z\\xc0-\\xd6\\xd8-\\xde](?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])|$)|[A-Z\\xc0-\\xd6\\xd8-\\xde]?(?:[a-z\\xdf-\\xf6\\xf8-\\xff]|[^\\ud800-\\udfff\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\d+\\u2700-\\u27bfa-z\\xdf-\\xf6\\xf8-\\xffA-Z\\xc0-\\xd6\\xd8-\\xde])+(?:['’](?:d|ll|m|re|s|t|ve))?|[A-Z\\xc0-\\xd6\\xd8-\\xde]+(?:['’](?:D|LL|M|RE|S|T|VE))?|\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])|\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])|\\d+|(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?(?:\\u200d(?:[^\\ud800-\\udfff]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff])[\\ufe0e\\ufe0f]?(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?)*/g\n\nconst words = (str) => str.match(reWords) || []\n\nconst upperFirst = (str) => str[0].toUpperCase() + str.slice(1)\n\nconst join = (str, d) => words(str).join(d).toLowerCase()\n\nconst camelCase = (str) =>\n  words(str).reduce(\n    (acc, next) =>\n      `${acc}${\n        !acc\n          ? next.toLowerCase()\n          : next[0].toUpperCase() + next.slice(1).toLowerCase()\n      }`,\n    '',\n  )\n\nconst pascalCase = (str) => upperFirst(camelCase(str))\n\nconst snakeCase = (str) => join(str, '_')\n\nconst kebabCase = (str) => join(str, '-')\n\nconst sentenceCase = (str) => upperFirst(join(str, ' '))\n\nconst titleCase = (str) => words(str).map(upperFirst).join(' ')\n\nmodule.exports = {\n  words,\n  upperFirst,\n  camelCase,\n  pascalCase,\n  snakeCase,\n  kebabCase,\n  sentenceCase,\n  titleCase,\n}\n"},"lineCount":40}},"error":null,"hash":"83ac14382cef51d995bc5f10b666ba3c","cacheData":{"env":{}}}